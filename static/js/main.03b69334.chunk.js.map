{"version":3,"sources":["pic1.png","pic2.png","pic3.png","pic_italian1.png","pic_italian2.png","pic_italian3.png","home.js","signup.js","home1.js","nomatch.js","indian.js","italian.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","history","useHistory","className","Button","variant","color","onClick","push","firebase","apiKey","authDomain","Signup","state","isSignedIn","uiConfig","signInFlow","signInOptions","GoogleAuthProvider","PROVIDER_ID","FacebookAuthProvider","GithubAuthProvider","EmailAuthProvider","callbacks","signInSuccess","componentDidMount","onAuthStateChanged","user","setState","console","log","this","props","firebaseAuth","Component","Home1","auth","signOut","Nomatch","Indian","useState","dish","setdish","alert","i","src","pic1","alt","width","height","class","pic2","pic3","Alert","severity","Italian","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.03b69334.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pic1.c58cb726.png\";","module.exports = __webpack_public_path__ + \"static/media/pic2.126b93a3.png\";","module.exports = __webpack_public_path__ + \"static/media/pic3.7c14d8ea.png\";","module.exports = __webpack_public_path__ + \"static/media/pic_italian1.3dc34a8d.png\";","module.exports = __webpack_public_path__ + \"static/media/pic_italian2.4051079f.png\";","module.exports = __webpack_public_path__ + \"static/media/pic_italian3.5b247201.png\";","import React,{useState} from \"react\";\r\nimport { Link ,useHistory} from \"react-router-dom\";\r\nimport Button from '@material-ui/core/Button'\r\nimport './App.css';\r\n\r\nfunction Home(){\r\n    let history = useHistory();\r\nreturn(\r\n    <div className='App'>\r\n        <br/><br/>\r\n        <Button variant=\"contained\" color=\"primary\" onClick = {()=>{history.push('/signup')}}> Signup/Login</Button>\r\n        <br/><br/>\r\n        \r\n        <div className=\"Card\">\r\n           <Button variant=\"contained\" color=\"secondary\" onClick = {()=>{history.push('/indian')}}>Indian</Button><br/><br/>\r\n           <Button variant=\"contained\" color=\"secondary\" onClick = {()=>{history.push('/italian')}}>Italian</Button>\r\n           \r\n        </div>\r\n    \r\n    </div>\r\n)\r\n}\r\n\r\nexport default Home;","import React,{Component} from 'react';\r\nimport  * as firebase from 'firebase';\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\r\n/*<span><div>Successfully Signed in</div>\r\n                                          <button onClick={()=>{firebase.auth().signOut()}}> SignOut</button>\r\n                                          <h1>{firebase.auth().currentUser.displayName}</h1>\r\n                                          </span>\r\n*/\r\nfirebase.initializeApp({\r\n    apiKey:\"AIzaSyAuzgnwssR7eim9P6ywZ6Q4BsBzr964EYA\",\r\n    authDomain:\"easy-shop-2cab6.firebaseapp.com\"\r\n\r\n});\r\n\r\nclass Signup extends Component\r\n{\r\n    state = {isSignedIn:false}\r\n\r\n    uiConfig = {\r\n        signInFlow:\"popup\",\r\n        \r\n        signInOptions:[\r\n            firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n            firebase.auth.FacebookAuthProvider.PROVIDER_ID,\r\n            firebase.auth.GithubAuthProvider.PROVIDER_ID,\r\n            firebase.auth.EmailAuthProvider.PROVIDER_ID\r\n        ],\r\n\r\n        callbacks:{\r\n            signInSuccess:()=>false\r\n        }\r\n    }\r\n\r\n    componentDidMount=()=>{\r\n           firebase.auth().onAuthStateChanged(user =>{\r\n           this.setState({isSignedIn:!!user})\r\n           console.log(\"user\",user)\r\n        })\r\n    }\r\n\r\n    \r\n   render(){\r\n    return(\r\n        <div className = \"App\">\r\n            {\r\n                this.state.isSignedIn ? (this.props.history.push('/home1')\r\n                                        )\r\n                : (\r\n                    <StyledFirebaseAuth\r\n                    uiConfig = {this.uiConfig}\r\n                    firebaseAuth = {firebase.auth()}\r\n                    />\r\n                )\r\n            } \r\n        </div>\r\n    )\r\n    }\r\n}\r\n\r\n\r\nexport default Signup;","import React from 'react';\r\nimport firebase from 'firebase';\r\nimport { Link ,useHistory} from \"react-router-dom\";\r\nimport Button from '@material-ui/core/Button'\r\nimport './App.css';\r\n\r\n\r\n\r\nfunction Home1(){\r\n    let history = useHistory();\r\n    const signout = ()=>{\r\n        firebase.auth().signOut();\r\n        history.push(\"/\");\r\n      }\r\nreturn(\r\n    <div className='App'>\r\n    <br/><br/>\r\n    <button onClick={signout}>Signout</button>\r\n    <br/><br/>\r\n\r\n    <div className=\"Card\">\r\n           <Button variant=\"contained\" color=\"secondary\" onClick = {()=>{history.push('/indian')}}>Indian</Button><br/><br/>\r\n           <Button variant=\"contained\" color=\"secondary\" onClick = {()=>{history.push('/italian')}}>Italian</Button>\r\n           \r\n    </div>\r\n    \r\n    </div>\r\n);\r\n}\r\n\r\nexport default Home1;","import React from 'react';\r\n\r\nfunction Nomatch(){\r\n    return(\r\n        <div>\r\n            <h1>Sorry Page Not Found</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nomatch;","import React,{useState} from 'react';\r\nimport pic1 from './pic1.png';\r\nimport pic2 from './pic2.png';\r\nimport pic3 from './pic3.png';\r\nimport './App.css';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\n\r\nfunction Indian(){\r\n\r\n    const[dish,setdish] = useState(0);\r\n    \r\n    const alert = (i)=>{\r\n        if(dish === 0){\r\n            setdish(i)\r\n        }\r\n        else{\r\n            setdish(0)\r\n        }\r\n    }\r\n\r\n    const Alerts = ()=>{\r\n        if(dish === 1){\r\n            return(<Alert severity=\"success\"><p>A classic and easy chole chickpea curry, is a favorite in \r\n                                                Northern India and has become a worldwide sensation. It's \r\n                                                perfect for a crowd, especially if you serve it hot along with \r\n                                                fried Indian leavened bread like poori or bhatura.The ingredient list \r\n                                                looks more intimidating than the recipe is in reality. Once you have the chickpeas,\r\n                                                onions, and tomatoes, along with garlic and ginger pastes, all you need are those common Indian spices that make this cuisine unique.</p></Alert>)   \r\n        }\r\n        else if(dish === 2){\r\n            return(<Alert severity=\"success\"><p>The most popular paneer recipe at Indian restaurants is, by far,\r\n                                                palak paneer. It is a mildly flavored dish that is super healthy,\r\n                                                as it is nothing more than spinach and cottage cheese (the paneer),\r\n                                                along with the typical Indian spices.Thanks to the large portions of spinach \r\n                                                and fenugreek leaves included in the recipe, this dish takes on a deep green hue.\r\n                                                The cubed paneer are pan-fried first, contributing a nice texture to the dish.\r\n                                                Palak paneer gets even better when served with your favorite flatbread.</p></Alert>)\r\n        }\r\n        else if(dish === 3){\r\n            return(<Alert severity=\"success\"><p>vegetable \"meatballs\" in a thick sauce) is \r\n                                                the vegetarian alternative to meatballs. The koftas \r\n                                                are made with a mix of potatoes, carrots, beans, peas, \r\n                                                and sweet corn, which are cooked and mashed before mixing\r\n                                                with spices and paneer, that essential blocked \"cheese\" that \r\n                                                is similar to tofu in texture and a great addition to any vegetarian meal. \r\n                                                It's rather easy to find if you don't want to make it, especially if you shop at a natural foods market.</p></Alert>)\r\n        }\r\n        else{\r\n            return(<div></div>)\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"Card1\"  onClick = {()=>alert(1)}>\r\n            <img src={pic1} alt=\"Avatar\" width=\"100%\" height = \"300px\"></img>\r\n                <div class=\"Container\">\r\n                    <h4><b>Chole(Chickpea Curry)</b></h4>\r\n                </div>\r\n            </div>\r\n            \r\n            <div className=\"Card2\"  onClick = {()=>alert(2)}>\r\n            <img src={pic2} alt=\"Avatar\" width=\"100%\" height = \"300px\"></img>\r\n                <div class=\"Container\">\r\n                    <h4><b>Palak Paneer</b></h4>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"Card3\"  onClick = {()=>alert(3)}>\r\n            <img src={pic3} alt=\"Avatar\" width=\"100%\" height = \"300px\"></img>\r\n                <div class=\"Container\">\r\n                    <h4><b>Malai Kofta</b></h4>\r\n                </div>\r\n            </div>\r\n          <div>{Alerts()}</div>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Indian;","import React,{useState} from 'react';\r\nimport pic1 from './pic_italian1.png';\r\nimport pic2 from './pic_italian2.png';\r\nimport pic3 from './pic_italian3.png';\r\nimport './App.css';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nfunction Italian(){\r\n    const[dish,setdish] = useState(0);\r\n    \r\n    const alert = (i)=>{\r\n        if(dish === 0){\r\n            setdish(i)\r\n        }\r\n        else{\r\n            setdish(0)\r\n        }\r\n    }\r\n\r\n    const Alerts = (i)=>{\r\n        if(dish == 1){\r\n            return(<Alert severity=\"success\"><p>Nothing like a fresh tomato salad in summers!\r\n                                                A great antipasto bite to start your meal with. This \r\n                                                combination of juicy tomatoes and mozzarella cheese salad\r\n                                                topped with freshly made pesto sauce is a distinct yet simple one.\r\n                                                It offers a twist to the classic caprese salad. </p></Alert>) \r\n        }\r\n        else if(dish == 2){\r\n            return(<Alert severity=\"success\"><p>Panzenella is a Tuscan bread salad, ideal for summer.\r\n                                                It does not follow a particular recipe, but the two ingredients\r\n                                                that do not change are tomatoes and bread. This salad is great\r\n                                                with a chilled glass of Prosecco and lots of sunshine!</p></Alert>) \r\n        }\r\n        else if(dish == 3){\r\n            return(<Alert severity=\"success\"><p>An antipasto dish, bruschetta has grilled bread topped with \r\n                                                veggies, rubbed garlic and tomato mix. A country bread sliced and \r\n                                                topped with different toppings - the evergreen tomato-basil and an \r\n                                                inventive mushroom-garlic. The classic Italian starter!</p></Alert>) \r\n        }\r\n        else{\r\n            return(<div></div>) \r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"Card1\" onClick = {()=>alert(1)}>\r\n            <img src={pic1} alt=\"Avatar\" width=\"100%\" height = \"300px\"></img>\r\n                <div class=\"Container\">\r\n                    <h4><b>Caprese Salad with Pesto Sauce</b></h4>\r\n                </div>\r\n            </div>\r\n            \r\n            <div className=\"Card2\" onClick = {()=>alert(2)}>\r\n            <img src={pic2} alt=\"Avatar\" width=\"100%\" height = \"300px\"></img>\r\n                <div class=\"Container\">\r\n                    <h4><b>Panzenella</b></h4>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"Card3\" onClick = {()=>alert(3)}>\r\n            <img src={pic3} alt=\"Avatar\" width=\"100%\" height = \"300px\"></img>\r\n                <div class=\"Container\">\r\n                    <h4><b>Bruschetta</b></h4>\r\n                </div>\r\n            </div>\r\n\r\n        <div>{Alerts()}</div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Italian;","import React from 'react';\nimport './App.css';\nimport {Route , Switch} from 'react-router-dom';\nimport Home from './home.js';\nimport Signup from './signup.js';\nimport Home1 from './home1.js';\nimport Nomatch from './nomatch.js';\nimport Indian from './indian.js';\nimport Italian from './italian.js';\n\n\nfunction App() {\n  return (\n    <div>\n      <Switch>\n        <Route exact path = '/' component = {Home}/>\n        <Route path = '/signup' component = {Signup}/>\n        <Route path = '/home1'  component = {Home1}/>\n        <Route path = '/indian' component = {Indian}/>\n        <Route path = '/italian' component = {Italian}/>\n        <Route component = {Nomatch}/>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router } from 'react-router-dom';\n\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}